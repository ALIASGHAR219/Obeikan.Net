import { __decorate, __metadata, __param } from "tslib";
import { ChangeDetectorRef, Component, forwardRef, Input, OnChanges, OnInit, Optional, SimpleChanges, ViewEncapsulation } from '@angular/core';
import { ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';
import { Subject } from 'rxjs';
import { debounceTime, takeUntil } from 'rxjs/operators';
import { NgxMatDateAdapter } from './core/ngx-mat-date-adapter';
import { createMissingDateImplError, DEFAULT_HOUR_PLACEHOLDER, DEFAULT_MINUTE_PLACEHOLDER, DEFAULT_SECOND_PLACEHOLDER, DEFAULT_STEP, formatTwoDigitTimeValue, LIMIT_TIMES, MERIDIANS, NUMERIC_REGEX, PATTERN_INPUT_HOUR, PATTERN_INPUT_MINUTE, PATTERN_INPUT_SECOND } from './utils/date-utils';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './core/ngx-mat-date-adapter';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/material/form-field';
import * as ɵngcc5 from '@angular/material/input';
import * as ɵngcc6 from '@angular/material/button';
import * as ɵngcc7 from '@angular/material/icon';

function NgxMatTimepickerComponent_tr_3_td_11_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "button", 9);
    ɵngcc0.ɵɵlistener("click", function NgxMatTimepickerComponent_tr_3_td_11_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.change("second", true); });
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "expand_less");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r6.disabled);
} }
function NgxMatTimepickerComponent_tr_3_td_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td", 5);
} }
function NgxMatTimepickerComponent_tr_3_td_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function NgxMatTimepickerComponent_tr_3_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵelementStart(2, "button", 9);
    ɵngcc0.ɵɵlistener("click", function NgxMatTimepickerComponent_tr_3_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.change("hour", true); });
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "expand_less");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "td");
    ɵngcc0.ɵɵelementStart(6, "td");
    ɵngcc0.ɵɵelementStart(7, "button", 9);
    ɵngcc0.ɵɵlistener("click", function NgxMatTimepickerComponent_tr_3_Template_button_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.change("minute", true); });
    ɵngcc0.ɵɵelementStart(8, "mat-icon");
    ɵngcc0.ɵɵtext(9, "expand_less");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(10, "td");
    ɵngcc0.ɵɵtemplate(11, NgxMatTimepickerComponent_tr_3_td_11_Template, 4, 1, "td", 3);
    ɵngcc0.ɵɵtemplate(12, NgxMatTimepickerComponent_tr_3_td_12_Template, 1, 0, "td", 7);
    ɵngcc0.ɵɵtemplate(13, NgxMatTimepickerComponent_tr_3_td_13_Template, 1, 0, "td", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r0.disabled);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("disabled", ctx_r0.disabled);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showSeconds);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.enableMeridian);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.enableMeridian);
} }
function NgxMatTimepickerComponent_td_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 5);
    ɵngcc0.ɵɵtext(1, ":");
    ɵngcc0.ɵɵelementEnd();
} }
function NgxMatTimepickerComponent_td_14_Template(rf, ctx) { if (rf & 1) {
    var _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "mat-form-field");
    ɵngcc0.ɵɵelementStart(2, "input", 10);
    ɵngcc0.ɵɵlistener("input", function NgxMatTimepickerComponent_td_14_Template_input_input_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.formatInput($event.target); })("keydown.ArrowUp", function NgxMatTimepickerComponent_td_14_Template_input_keydown_ArrowUp_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r16 = ɵngcc0.ɵɵnextContext(); ctx_r16.change("second", true); return $event.preventDefault(); })("keydown.ArrowDown", function NgxMatTimepickerComponent_td_14_Template_input_keydown_ArrowDown_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r17 = ɵngcc0.ɵɵnextContext(); ctx_r17.change("second", false); return $event.preventDefault(); })("blur", function NgxMatTimepickerComponent_td_14_Template_input_blur_2_listener() { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.change("second"); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function NgxMatTimepickerComponent_td_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td", 5);
} }
function NgxMatTimepickerComponent_td_16_Template(rf, ctx) { if (rf & 1) {
    var _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 11);
    ɵngcc0.ɵɵelementStart(1, "button", 12);
    ɵngcc0.ɵɵlistener("click", function NgxMatTimepickerComponent_td_16_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r20); var ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.toggleMeridian(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("color", ctx_r4.color)("disabled", ctx_r4.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.meridian, " ");
} }
function NgxMatTimepickerComponent_tr_17_td_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function NgxMatTimepickerComponent_tr_17_td_11_Template(rf, ctx) { if (rf & 1) {
    var _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "button", 13);
    ɵngcc0.ɵɵlistener("click", function NgxMatTimepickerComponent_tr_17_td_11_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r26); var ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.change("second", false); });
    ɵngcc0.ɵɵelementStart(2, "mat-icon");
    ɵngcc0.ɵɵtext(3, "expand_more");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r22.disabled);
} }
function NgxMatTimepickerComponent_tr_17_td_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td", 5);
} }
function NgxMatTimepickerComponent_tr_17_td_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function NgxMatTimepickerComponent_tr_17_Template(rf, ctx) { if (rf & 1) {
    var _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵelementStart(2, "button", 13);
    ɵngcc0.ɵɵlistener("click", function NgxMatTimepickerComponent_tr_17_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r28); var ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.change("hour", false); });
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "expand_more");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "td");
    ɵngcc0.ɵɵelementStart(6, "td");
    ɵngcc0.ɵɵelementStart(7, "button", 13);
    ɵngcc0.ɵɵlistener("click", function NgxMatTimepickerComponent_tr_17_Template_button_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r28); var ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.change("minute", false); });
    ɵngcc0.ɵɵelementStart(8, "mat-icon");
    ɵngcc0.ɵɵtext(9, "expand_more");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(10, NgxMatTimepickerComponent_tr_17_td_10_Template, 1, 0, "td", 3);
    ɵngcc0.ɵɵtemplate(11, NgxMatTimepickerComponent_tr_17_td_11_Template, 4, 1, "td", 3);
    ɵngcc0.ɵɵtemplate(12, NgxMatTimepickerComponent_tr_17_td_12_Template, 1, 0, "td", 7);
    ɵngcc0.ɵɵtemplate(13, NgxMatTimepickerComponent_tr_17_td_13_Template, 1, 0, "td", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r5.disabled);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("disabled", ctx_r5.disabled);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.showSeconds);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.showSeconds);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.enableMeridian);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.enableMeridian);
} }
var NgxMatTimepickerComponent = /** @class */ (function () {
    function NgxMatTimepickerComponent(_dateAdapter, cd, formBuilder) {
        this._dateAdapter = _dateAdapter;
        this.cd = cd;
        this.formBuilder = formBuilder;
        this.disabled = false;
        this.showSpinners = true;
        this.hourPlaceholder = DEFAULT_HOUR_PLACEHOLDER;
        this.minutePlaceholder = DEFAULT_MINUTE_PLACEHOLDER;
        this.secondPlaceholder = DEFAULT_SECOND_PLACEHOLDER;
        this.stepHour = DEFAULT_STEP;
        this.stepMinute = DEFAULT_STEP;
        this.stepSecond = DEFAULT_STEP;
        this.showSeconds = false;
        this.enableMeridian = false;
        this.color = 'primary';
        this.meridian = MERIDIANS.AM;
        this._onChange = function () { };
        this._onTouched = function () { };
        this._destroyed = new Subject();
        this.pattern = PATTERN_INPUT_HOUR;
        if (!this._dateAdapter) {
            throw createMissingDateImplError('NgxMatDateAdapter');
        }
        this.form = this.formBuilder.group({
            hour: [{ value: null, disabled: this.disabled }, [Validators.required, Validators.pattern(PATTERN_INPUT_HOUR)]],
            minute: [{ value: null, disabled: this.disabled }, [Validators.required, Validators.pattern(PATTERN_INPUT_MINUTE)]],
            second: [{ value: null, disabled: this.disabled }, [Validators.required, Validators.pattern(PATTERN_INPUT_SECOND)]]
        });
    }
    NgxMatTimepickerComponent_1 = NgxMatTimepickerComponent;
    Object.defineProperty(NgxMatTimepickerComponent.prototype, "hour", {
        /** Hour */
        get: function () {
            var val = Number(this.form.controls['hour'].value);
            return isNaN(val) ? 0 : val;
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(NgxMatTimepickerComponent.prototype, "minute", {
        get: function () {
            var val = Number(this.form.controls['minute'].value);
            return isNaN(val) ? 0 : val;
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(NgxMatTimepickerComponent.prototype, "second", {
        get: function () {
            var val = Number(this.form.controls['second'].value);
            return isNaN(val) ? 0 : val;
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(NgxMatTimepickerComponent.prototype, "valid", {
        /** Whether or not the form is valid */
        get: function () {
            return this.form.valid;
        },
        enumerable: true,
        configurable: true
    });
    NgxMatTimepickerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.form.valueChanges.pipe(takeUntil(this._destroyed), debounceTime(400)).subscribe(function (val) {
            _this._updateModel();
        });
    };
    NgxMatTimepickerComponent.prototype.ngOnChanges = function (changes) {
        if (changes.disabled && !changes.disabled.firstChange) {
            this.disabled ? this.form.disable() : this.form.enable();
        }
    };
    NgxMatTimepickerComponent.prototype.ngOnDestroy = function () {
        this._destroyed.next();
        this._destroyed.complete();
    };
    /**
     * Writes a new value to the element.
     * @param obj
     */
    NgxMatTimepickerComponent.prototype.writeValue = function (val) {
        this._model = val || this._dateAdapter.today();
        this._updateHourMinuteSecond();
    };
    /** Registers a callback function that is called when the control's value changes in the UI. */
    NgxMatTimepickerComponent.prototype.registerOnChange = function (fn) {
        this._onChange = fn;
    };
    /**
     * Set the function to be called when the control receives a touch event.
     */
    NgxMatTimepickerComponent.prototype.registerOnTouched = function (fn) {
        this._onTouched = fn;
    };
    /** Enables or disables the appropriate DOM element */
    NgxMatTimepickerComponent.prototype.setDisabledState = function (isDisabled) {
        this._disabled = isDisabled;
        this.cd.markForCheck();
    };
    /**
     * Format input
     * @param input
     */
    NgxMatTimepickerComponent.prototype.formatInput = function (input) {
        input.value = input.value.replace(NUMERIC_REGEX, '');
    };
    /** Toggle meridian */
    NgxMatTimepickerComponent.prototype.toggleMeridian = function () {
        this.meridian = (this.meridian === MERIDIANS.AM) ? MERIDIANS.PM : MERIDIANS.AM;
        this.change('hour');
    };
    /** Change property of time */
    NgxMatTimepickerComponent.prototype.change = function (prop, up) {
        var next = this._getNextValueByProp(prop, up);
        this.form.controls[prop].setValue(formatTwoDigitTimeValue(next), { onlySelf: false, emitEvent: false });
        this._updateModel();
    };
    /** Update controls of form by model */
    NgxMatTimepickerComponent.prototype._updateHourMinuteSecond = function () {
        var _hour = this._dateAdapter.getHour(this._model);
        var _minute = this._dateAdapter.getMinute(this._model);
        var _second = this._dateAdapter.getSecond(this._model);
        if (this.enableMeridian) {
            if (_hour > LIMIT_TIMES.meridian) {
                _hour = _hour - LIMIT_TIMES.meridian;
                this.meridian = MERIDIANS.PM;
            }
            else {
                this.meridian = MERIDIANS.AM;
            }
        }
        this.form.controls['hour'].setValue(formatTwoDigitTimeValue(_hour));
        this.form.controls['minute'].setValue(formatTwoDigitTimeValue(_minute));
        this.form.controls['second'].setValue(formatTwoDigitTimeValue(_second));
    };
    /** Update model */
    NgxMatTimepickerComponent.prototype._updateModel = function () {
        var _hour = this.hour;
        if (this.enableMeridian && this.meridian === MERIDIANS.PM && _hour !== LIMIT_TIMES.meridian) {
            _hour = _hour + LIMIT_TIMES.meridian;
        }
        this._dateAdapter.setHour(this._model, _hour);
        this._dateAdapter.setMinute(this._model, this.minute);
        this._dateAdapter.setSecond(this._model, this.second);
        this._onChange(this._model);
    };
    /**
     * Get next value by property
     * @param prop
     * @param up
     */
    NgxMatTimepickerComponent.prototype._getNextValueByProp = function (prop, up) {
        var keyProp = prop[0].toUpperCase() + prop.slice(1);
        var min = LIMIT_TIMES["min" + keyProp];
        var max = LIMIT_TIMES["max" + keyProp];
        if (prop === 'hour' && this.enableMeridian) {
            max = LIMIT_TIMES.meridian;
        }
        var next;
        if (up == null) {
            next = this[prop] % (max);
        }
        else {
            next = up ? this[prop] + this["step" + keyProp] : this[prop] - this["step" + keyProp];
            if (prop === 'hour' && this.enableMeridian) {
                next = next % (max + 1);
                if (next === 0)
                    next = up ? 1 : max;
            }
            else {
                next = next % max;
            }
            if (up) {
                next = next > max ? (next - max + min) : next;
            }
            else {
                next = next < min ? (next - min + max) : next;
            }
        }
        return next;
    };
    var NgxMatTimepickerComponent_1;
    NgxMatTimepickerComponent.ctorParameters = function () { return [
        { type: NgxMatDateAdapter, decorators: [{ type: Optional }] },
        { type: ChangeDetectorRef },
        { type: FormBuilder }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NgxMatTimepickerComponent.prototype, "disabled", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NgxMatTimepickerComponent.prototype, "showSpinners", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NgxMatTimepickerComponent.prototype, "hourPlaceholder", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NgxMatTimepickerComponent.prototype, "minutePlaceholder", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NgxMatTimepickerComponent.prototype, "secondPlaceholder", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxMatTimepickerComponent.prototype, "stepHour", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxMatTimepickerComponent.prototype, "stepMinute", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgxMatTimepickerComponent.prototype, "stepSecond", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NgxMatTimepickerComponent.prototype, "showSeconds", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], NgxMatTimepickerComponent.prototype, "enableMeridian", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgxMatTimepickerComponent.prototype, "color", void 0);
    NgxMatTimepickerComponent = NgxMatTimepickerComponent_1 = __decorate([ __param(0, Optional()),
        __metadata("design:paramtypes", [NgxMatDateAdapter,
            ChangeDetectorRef, FormBuilder])
    ], NgxMatTimepickerComponent);
NgxMatTimepickerComponent.ɵfac = function NgxMatTimepickerComponent_Factory(t) { return new (t || NgxMatTimepickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgxMatDateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormBuilder)); };
NgxMatTimepickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxMatTimepickerComponent, selectors: [["ngx-mat-timepicker"]], hostAttrs: [1, "ngx-mat-timepicker"], inputs: { disabled: "disabled", showSpinners: "showSpinners", hourPlaceholder: "hourPlaceholder", minutePlaceholder: "minutePlaceholder", secondPlaceholder: "secondPlaceholder", stepHour: "stepHour", stepMinute: "stepMinute", stepSecond: "stepSecond", showSeconds: "showSeconds", enableMeridian: "enableMeridian", color: "color" }, exportAs: ["ngxMatTimepicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(function () { return NgxMatTimepickerComponent_1; }),
                multi: true
            }
        ]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 18, vars: 8, consts: [[3, "formGroup"], [1, "table"], [1, "tbody"], [4, "ngIf"], ["type", "text", "matInput", "", "maxlength", "2", "formControlName", "hour", 3, "placeholder", "input", "keydown.ArrowUp", "keydown.ArrowDown", "blur"], [1, "spacer"], ["type", "text", "matInput", "", "maxlength", "2", "formControlName", "minute", 3, "input", "keydown.ArrowUp", "keydown.ArrowDown", "blur"], ["class", "spacer", 4, "ngIf"], ["class", "meridian", 4, "ngIf"], ["type", "button", "mat-icon-button", "", "aria-label", "expand_less icon", 3, "disabled", "click"], ["type", "text", "matInput", "", "maxlength", "2", "formControlName", "second", 3, "input", "keydown.ArrowUp", "keydown.ArrowDown", "blur"], [1, "meridian"], ["mat-button", "", "mat-stroked-button", "", 3, "color", "disabled", "click"], ["type", "button", "mat-icon-button", "", "aria-label", "expand_more icon", 3, "disabled", "click"]], template: function NgxMatTimepickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0);
        ɵngcc0.ɵɵelementStart(1, "table", 1);
        ɵngcc0.ɵɵelementStart(2, "tbody", 2);
        ɵngcc0.ɵɵtemplate(3, NgxMatTimepickerComponent_tr_3_Template, 14, 5, "tr", 3);
        ɵngcc0.ɵɵelementStart(4, "tr");
        ɵngcc0.ɵɵelementStart(5, "td");
        ɵngcc0.ɵɵelementStart(6, "mat-form-field");
        ɵngcc0.ɵɵelementStart(7, "input", 4);
        ɵngcc0.ɵɵlistener("input", function NgxMatTimepickerComponent_Template_input_input_7_listener($event) { return ctx.formatInput($event.target); })("keydown.ArrowUp", function NgxMatTimepickerComponent_Template_input_keydown_ArrowUp_7_listener($event) { ctx.change("hour", true); return $event.preventDefault(); })("keydown.ArrowDown", function NgxMatTimepickerComponent_Template_input_keydown_ArrowDown_7_listener($event) { ctx.change("hour", false); return $event.preventDefault(); })("blur", function NgxMatTimepickerComponent_Template_input_blur_7_listener() { return ctx.change("hour"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "td", 5);
        ɵngcc0.ɵɵtext(9, ":");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "td");
        ɵngcc0.ɵɵelementStart(11, "mat-form-field");
        ɵngcc0.ɵɵelementStart(12, "input", 6);
        ɵngcc0.ɵɵlistener("input", function NgxMatTimepickerComponent_Template_input_input_12_listener($event) { return ctx.formatInput($event.target); })("keydown.ArrowUp", function NgxMatTimepickerComponent_Template_input_keydown_ArrowUp_12_listener($event) { ctx.change("minute", true); return $event.preventDefault(); })("keydown.ArrowDown", function NgxMatTimepickerComponent_Template_input_keydown_ArrowDown_12_listener($event) { ctx.change("minute", false); return $event.preventDefault(); })("blur", function NgxMatTimepickerComponent_Template_input_blur_12_listener() { return ctx.change("minute"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(13, NgxMatTimepickerComponent_td_13_Template, 2, 0, "td", 7);
        ɵngcc0.ɵɵtemplate(14, NgxMatTimepickerComponent_td_14_Template, 3, 0, "td", 3);
        ɵngcc0.ɵɵtemplate(15, NgxMatTimepickerComponent_td_15_Template, 1, 0, "td", 7);
        ɵngcc0.ɵɵtemplate(16, NgxMatTimepickerComponent_td_16_Template, 3, 3, "td", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(17, NgxMatTimepickerComponent_tr_17_Template, 14, 6, "tr", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.form);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSpinners);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("placeholder", ctx.hourPlaceholder);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSeconds);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSeconds);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.enableMeridian);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.enableMeridian);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSpinners);
    } }, directives: [ɵngcc2.ɵangular_packages_forms_forms_y, ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc3.NgIf, ɵngcc4.MatFormField, ɵngcc5.MatInput, ɵngcc2.DefaultValueAccessor, ɵngcc2.MaxLengthValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlName, ɵngcc6.MatButton, ɵngcc7.MatIcon], styles: [".ngx-mat-timepicker{font-size:13px}.ngx-mat-timepicker form{min-width:90px}.ngx-mat-timepicker form .table .tbody tr td{text-align:center}.ngx-mat-timepicker form .table .tbody tr td.spacer{font-weight:700}.ngx-mat-timepicker form .table .tbody tr td.meridian .mat-button{min-width:64px;line-height:36px;border-radius:50%;min-width:0;width:36px;height:36px;padding:0;flex-shrink:0}.ngx-mat-timepicker form .table .tbody tr td .mat-icon-button{height:24px;width:24px;line-height:24px}.ngx-mat-timepicker form .table .tbody tr td .mat-icon-button .mat-icon{font-size:24px}.ngx-mat-timepicker form .table .tbody tr td .mat-form-field{width:20px;max-width:20px;text-align:center}"], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxMatTimepickerComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-mat-timepicker',
                template: "<form [formGroup]=\"form\">\r\n  <table class=\"table\">\r\n    <tbody class=\"tbody\">\r\n      <tr *ngIf=\"showSpinners\">\r\n        <td>\r\n          <button type=\"button\" mat-icon-button aria-label=\"expand_less icon\" (click)=\"change('hour', true)\"\r\n            [disabled]=\"disabled\">\r\n            <mat-icon>expand_less</mat-icon>\r\n          </button>\r\n        </td>\r\n        <td></td>\r\n        <td>\r\n          <button type=\"button\" mat-icon-button aria-label=\"expand_less icon\" (click)=\"change('minute', true)\"\r\n            [disabled]=\"disabled\">\r\n            <mat-icon>expand_less</mat-icon>\r\n          </button> </td>\r\n        <td></td>\r\n        <td *ngIf=\"showSeconds\">\r\n          <button type=\"button\" mat-icon-button aria-label=\"expand_less icon\" (click)=\"change('second', true)\"\r\n            [disabled]=\"disabled\">\r\n            <mat-icon>expand_less</mat-icon>\r\n          </button>\r\n        </td>\r\n        <td *ngIf=\"enableMeridian\" class=\"spacer\"></td>\r\n        <td *ngIf=\"enableMeridian\"></td>\r\n      </tr>\r\n\r\n      <tr>\r\n        <td>\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput (input)=\"formatInput($any($event).target)\" maxlength=\"2\" formControlName=\"hour\"\r\n              [placeholder]=\"hourPlaceholder\" (keydown.ArrowUp)=\"change('hour', true); $event.preventDefault()\"\r\n              (keydown.ArrowDown)=\"change('hour', false); $event.preventDefault()\" (blur)=\"change('hour')\">\r\n          </mat-form-field>\r\n        </td>\r\n        <td class=\"spacer\">&#58;</td>\r\n        <td>\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput (input)=\"formatInput($any($event).target)\" maxlength=\"2\"\r\n              formControlName=\"minute\" (keydown.ArrowUp)=\"change('minute', true); $event.preventDefault()\"\r\n              (keydown.ArrowDown)=\"change('minute', false); $event.preventDefault()\" (blur)=\"change('minute')\">\r\n          </mat-form-field>\r\n        </td>\r\n        <td *ngIf=\"showSeconds\" class=\"spacer\">&#58;</td>\r\n        <td *ngIf=\"showSeconds\">\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput (input)=\"formatInput($any($event).target)\" maxlength=\"2\"\r\n              formControlName=\"second\" (keydown.ArrowUp)=\"change('second', true); $event.preventDefault()\"\r\n              (keydown.ArrowDown)=\"change('second', false); $event.preventDefault()\" (blur)=\"change('second')\">\r\n          </mat-form-field>\r\n        </td>\r\n\r\n        <td *ngIf=\"enableMeridian\" class=\"spacer\"></td>\r\n        <td *ngIf=\"enableMeridian\" class=\"meridian\">\r\n          <button mat-button (click)=\"toggleMeridian()\" mat-stroked-button [color]=\"color\" [disabled]=\"disabled\">\r\n            {{meridian}}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n\r\n      <tr *ngIf=\"showSpinners\">\r\n        <td>\r\n          <button type=\"button\" mat-icon-button aria-label=\"expand_more icon\" (click)=\"change('hour', false)\"\r\n            [disabled]=\"disabled\">\r\n            <mat-icon>expand_more</mat-icon>\r\n          </button> </td>\r\n        <td></td>\r\n        <td>\r\n          <button type=\"button\" mat-icon-button aria-label=\"expand_more icon\" (click)=\"change('minute', false)\"\r\n            [disabled]=\"disabled\">\r\n            <mat-icon>expand_more</mat-icon>\r\n          </button> </td>\r\n        <td *ngIf=\"showSeconds\"></td>\r\n        <td *ngIf=\"showSeconds\">\r\n          <button type=\"button\" mat-icon-button aria-label=\"expand_more icon\" (click)=\"change('second', false)\"\r\n            [disabled]=\"disabled\">\r\n            <mat-icon>expand_more</mat-icon>\r\n          </button>\r\n        </td>\r\n        <td *ngIf=\"enableMeridian\" class=\"spacer\"></td>\r\n        <td *ngIf=\"enableMeridian\"></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</form>",
                host: {
                    'class': 'ngx-mat-timepicker'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(function () { return NgxMatTimepickerComponent_1; }),
                        multi: true
                    }
                ],
                exportAs: 'ngxMatTimepicker',
                encapsulation: ViewEncapsulation.None,
                styles: [".ngx-mat-timepicker{font-size:13px}.ngx-mat-timepicker form{min-width:90px}.ngx-mat-timepicker form .table .tbody tr td{text-align:center}.ngx-mat-timepicker form .table .tbody tr td.spacer{font-weight:700}.ngx-mat-timepicker form .table .tbody tr td.meridian .mat-button{min-width:64px;line-height:36px;border-radius:50%;min-width:0;width:36px;height:36px;padding:0;flex-shrink:0}.ngx-mat-timepicker form .table .tbody tr td .mat-icon-button{height:24px;width:24px;line-height:24px}.ngx-mat-timepicker form .table .tbody tr td .mat-icon-button .mat-icon{font-size:24px}.ngx-mat-timepicker form .table .tbody tr td .mat-form-field{width:20px;max-width:20px;text-align:center}"]
            }]
    }], function () { return [{ type: ɵngcc1.NgxMatDateAdapter, decorators: [{
                type: Optional
            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.FormBuilder }]; }, { disabled: [{
            type: Input
        }], showSpinners: [{
            type: Input
        }], hourPlaceholder: [{
            type: Input
        }], minutePlaceholder: [{
            type: Input
        }], secondPlaceholder: [{
            type: Input
        }], stepHour: [{
            type: Input
        }], stepMinute: [{
            type: Input
        }], stepSecond: [{
            type: Input
        }], showSeconds: [{
            type: Input
        }], enableMeridian: [{
            type: Input
        }], color: [{
            type: Input
        }] }); })();
    return NgxMatTimepickerComponent;
}());
export { NgxMatTimepickerComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,